{% set version = "1.8.2" %}

package:
  name: openfst
  version: {{ version }}

source:
  url: http://www.openfst.org/twiki/pub/FST/FstDownload/openfst-{{ version }}.tar.gz
  sha256: de987bf3624721c5d5ba321af95751898e4f4bb41c8a36e2d64f0627656d8b42
  patches:
    - patches/0001-Remove-float-equality-check-in-cross-compiling.patch  # [build_platform != target_platform]
    - patches/0002-add-missing-header.patch
    - patches/0003-add-no-undefined-to-some-LDFLAGS.patch                # [win]
    - patches/0004-Fix-file-closing-on-windows.patch                     # [win]

build:
  number: 2
  run_exports:
  # seems to be changing even with patch releases
  # https://abi-laboratory.pro/tracker/timeline/openfst/
    - {{ pin_subpackage('openfst', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler('cxx') }}
    - make         # [unix]
    - gnuconfig    # [unix]
    - cmake        # [win]
    - ninja        # [win]
    - m2-patch     # [win]
  host:
    - dlfcn-win32  # [win]
    - icu
  run:
    - ucrt         # [win]

{% set fst_binaries = [
    "farcompilestrings", "farconvert", "farcreate", "farencode", "farequal", "farextract",
    "farinfo", "farisomorphic", "farprintstrings", "fstarcsort", "fstclosure", "fstcompile",
    "fstcompose", "fstcompress", "fstconcat", "fstconnect", "fstconvert", "fstdeterminize",
    "fstdifference", "fstdisambiguate", "fstdraw", "fstencode", "fstepsnormalize", "fstequal",
    "fstequivalent", "fstinfo", "fstintersect", "fstinvert", "fstisomorphic", "fstlinear",
    "fstloglinearapply", "fstmap", "fstminimize", "fstprint", "fstproject", "fstprune", "fstpush",
    "fstrandgen", "fstrelabel", "fstreplace", "fstreverse", "fstreweight", "fstrmepsilon",
    "fstshortestdistance", "fstshortestpath", "fstspecial", "fstsymbols", "fstsynchronize",
    "fsttopsort", "fstunion", "mpdtcompose", "mpdtexpand", "mpdtinfo", "mpdtreverse",
    "pdtcompose", "pdtexpand", "pdtinfo", "pdtreplace", "pdtreverse", "pdtshortestpath"
] %}
{% set fst_libraries = [
    "", "compact", "compressscript", "const", "far", "farscript",
    "linearscript", "lookahead", "mpdtscript", "ngram", "pdtscript",
    "script", "special"
] %}
# This list should be substantially longer; this is just a stand-in
# selection; relevant headers can be added as needed/desired.
{% set fst_headers = [
    "fst.h", "shortest-path.h", "weight.h",
    "extensions/compress/compress.h", "extensions/far/convert.h",
    "extensions/special/phi-fst.h", "script/compose.h"
] %}

test:
  commands:
    # binaries:
    {% for each_bin in fst_binaries %}
      # If behaving properly these will have return code 1.
      - {{ each_bin }} --helpshort >/dev/null || [[ $? == 1 ]]                      # [unix]
      - {{ each_bin }} --helpshort & if errorlevel 1 ( exit /b 0) else (exit /b 1)  # [win]
    {% endfor %}

    # libraries:
    {% for each_lib in fst_libraries %}
      # shared
      - test -f $PREFIX/lib/libfst{{ each_lib }}.so               # [linux]
      - test -f $PREFIX/lib/libfst{{ each_lib }}.dylib            # [osx]
      - if not exist %LIBRARY_BIN%\fst{{ each_lib }}.dll exit 1   # [win]

      # absence of static libraries
      - test ! -f $PREFIX/lib/libfst{{ each_lib }}.a              # [not win]
    {% endfor %}

    # headers:
    {% for each_header in fst_headers %}
      - test -f $PREFIX/include/fst/{{ each_header }} || (echo "{{ each_header }} not found" && exit 1)  # [unix]
      - if not exist %LIBRARY_INC%\fst\{{ "\\".join(each_header.split("/")) }} exit 1                    # [win]
    {% endfor %}

about:
  home: http://openfst.org
  license: Apache-2.0
  license_file: COPYING
  summary: Weighted finite-state transducers
  description: |
    A library for constructing, combining, optimizing, and searching weighted 
    finite-state transducers (FSTs)
  doc_url: http://www.openfst.org/twiki/bin/view/FST/FstQuickTour

extra:
  recipe-maintainers:
    - kylebgorman
    - mcernak
